{
  "schema": {
    "compliments": {
      "type": "object",
      "title": "properties for compliments",
      "properties": {
        "module": {
          "type": "string",
          "title": "module",
          "default": "compliments",
          "readonly": true
        },
        "disabled": {
          "type": "boolean",
          "title": "disabled",
          "default": false
        },
        "position": {
          "type": "string",
          "title": "module position",
          "readonly": "true"
        },
        "classes": {
          "type": "string",
          "title": "classes",
          "default": ""
        },
        "order": {
          "type": "string",
          "title": "order",
          "default": "*"
        },
        "inconfig": {
          "type": "string",
          "title": "inconfig",
          "default": "0"
        },
        "index": {
          "type": "integer"
        },
        "config": {
          "type": "object",
          "title": "config",
          "properties": {
            "compliments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "when": {
                    "type": "string",
                    "enum":[
                      "anytime",
                      "morning",
                      "afternoon",
                      "evening",
                      "weather-format",
                      "date-format",
                      "date-time-format"
                    ]
                  },
                  "date-format":{
                    "type":"string"
                  },
                  "date-time-format":{
                    "type":"string"
                  },
                  "weather-format":{
                    "type":"string",
                    "enum":[
                      "day_sunny",
                      "day_cloudy",
                      "cloudy",
                      "cloudy_windy",
                      "showers",
                      "rain",
                      "thunderstorm",
                      "snow",
                      "fog",
                      "night_clear",
                      "night_cloudy",
                      "night_showers",
                      "night_rain",
                      "night_thunderstorm",
                      "night_snow",
                      "night_alt_cloudy_windy"
                    ]
                  },
                  "list": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "updateInterval": {
              "type": "integer"
            },
            "remoteFile": {
              "type": "string"
            },
            "fadeSpeed": {
              "type": "integer"
            },
            "morningStartTime": {
              "type": "integer"
            },
            "morningEndTime": {
              "type": "integer"
            },
            "afternoonStartTime": {
              "type": "integer"
            },
            "afternoonEndTime": {
              "type": "integer"
            },
            "random": {
              "type": "boolean"
            }
          }
        }
      }
    }
  },
  "form": [
    {
      "key": "compliments.disabled",
      "htmlClass": "disabled_checkbox",
      "description": "when checked the module will not be used by MagicMirror<br> but will remain in config.js if already present"
    },
    {
      "key": "compliments.position",
      "description": "use Module Positions section below to set or change"
    },
    {
      "key": "compliments.classes",
      "description": "css classes to use for this module, beyond what MM provides"
    },
    {
      "key": "compliments.order",
      "type": "hidden"
    },
    {
      "key": "compliments.inconfig",
      "type": "hidden"
    },
    {
      "key": "compliments.index",
      "type": "hidden"
    },
    {
      "type": "fieldset",
      "title": "config",
      "items": [
        {
          "type": "array",
          "title": "compliments",
          "deleteCurrent": false,
          "draggable":false,
          "items": {
            "type": "fieldset",
            "items": [
              {
                "title": "when",
                "key": "compliments.config.compliments[].when",
                "onChange":"(evt,node)=>{let choices=['date-format','date-time-format','weather-format'];let value=evt.target.value;let index=choices.indexOf(value);var parentElement =$(evt.target).closest('fieldset');for(let i in choices){let target=parentElement.find('div[class$='+choices[i]+']');let style=(index != i?'none':'block');target[0].style.display=style;}}",
                "titleMap":{
                      "anytime":"anytime",
                      "morning":"morning",
                      "afternoon":"afternoon",
                      "evening":"evening",
                      "weather-format":"weather related",
                      "date-format":"date",
                      "date-time-format":"date and time (cron)"
                }
              },
              {
                "key": "compliments.config.compliments[].date-format",
                "title":"date",
                "placeholder":"YYYY-MM-DD",
                "fieldHtmlClass":"date-format",
                "type": "text",
                "description": "YYYY-MM-DD, use .(dot) for any value you don't care, for birthday, don't care about year so ....-MM-DD",
                "required":true,
                "onInput":"(evt,node)=>{let value=evt.target.value;if(!date_validator(value)){evt.target.parentElement.classList.add('fieldError')}else {evt.target.parentElement.classList.remove('fieldError')}}"
              },
              {
                "key": "compliments.config.compliments[].date-time-format",
                "title":"date/time",
                "placeholder":"min hour day_of_month month dow",
                "type": "text",
                "fieldHtmlClass":"date-time-format",
                "description": "see <a href=\"https://crontab-generator.org/\">cron schedule creator</a><br>enter anything for the command, only use the first 5 fields os the result",
                "required":true,
                "onInput":"(evt,node)=>{let value=evt.target.value;if(!cron_validator(value)){evt.target.parentElement.classList.add('fieldError')}else {evt.target.parentElement.classList.remove('fieldError')}}"
              },
              {
                "key": "compliments.config.compliments[].weather-format",
                "title":"weather condition",
                "fieldHtmlClass":"weather-format",
                "required":true
              },
              {
                "type": "array",
                "title":"list of phrases to show for this event type",
                "deleteCurrent": false,
                "draggable":false,
                "htmlClass":"compliments_list",
                "items": [
                  {
                    "notitle": true,
                    "deleteCurrent": false,
                    "key": "compliments.config.compliments[].list[]"
                  }
                ]
              }
            ]
          }
        },
        {
          "title": "updateInterval",
          "key": "compliments.config.updateInterval"
        },
        {
          "title": "remoteFile",
          "key": "compliments.config.remoteFile"
        },
        {
          "title": "fadeSpeed",
          "key": "compliments.config.fadeSpeed"
        },
        {
          "title": "morningStartTime",
          "key": "compliments.config.morningStartTime"
        },
        {
          "title": "morningEndTime",
          "key": "compliments.config.morningEndTime"
        },
        {
          "title": "afternoonStartTime",
          "key": "compliments.config.afternoonStartTime"
        },
        {
          "title": "afternoonEndTime",
          "key": "compliments.config.afternoonEndTime"
        },
        {
          "title": "random",
          "key": "compliments.config.random"
        }
      ]
    }
  ],
  "value": {
    "disabled": true,
    "module": "compliments",
    "position": "none",
    "order": "*",
    "inconfig": "0",
    "config": {
      "compliments": {
        "anytime": ["Hey there sexy!"],
        "morning": ["Good morning, handsome!", "Enjoy your day!", "How was your sleep?"],
        "afternoon": ["Hello, beauty!", "You look sexy!", "Looking good today!"],
        "evening": ["Wow, you look hot!", "You look nice!", "Hi, sexy!"],
        "....-01-01": ["Happy new year!"]
      },
      "updateInterval": 30000,
      "remoteFile": null,
      "fadeSpeed": 4000,
      "morningStartTime": 3,
      "morningEndTime": 12,
      "afternoonStartTime": 12,
      "afternoonEndTime": 17,
      "random": true
    }
  }
}